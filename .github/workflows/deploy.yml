name: Deploy WordPress Plugin

on:
  push:
    tags:
      - 'v*'  # Triggers the workflow on version tags (e.g., v1.0.0)

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
          contents: write  # Grants permission to update releases
          
    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v4

    # Step 2: Set up PHP environment
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: mbstring, json, curl
        coverage: none

    # Step 3: Validate PHP syntax
    - name: Validate PHP Syntax
      run: |
        find . -name "*.php" -print0 | xargs -0 -n1 php -l

    # Step 4: Prepare plugin for deployment
    - name: Prepare Plugin for Deployment
      run: |
        mkdir -p build
        rsync -av --exclude 'build' --exclude '.git' --exclude '.github' --exclude 'node_modules' ./ build/wp-advanced-role-manager
        cd build
        zip -r ../wp-advanced-role-manager.zip wp-advanced-role-manager
        cd ..

    # Step 5: Upload the ZIP file as an artifact
    - name: Upload Plugin ZIP
      id: upload-artifact  # Add an ID to reference this step
      uses: actions/upload-artifact@v4
      with:
        name: wp-advanced-role-manager
        path: wp-advanced-role-manager.zip

    # Step 6: Update Release Note with Artifact URL
    - name: Update Release Note
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
      run: |
        ARTIFACT_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts"
        RELEASE_TAG="${GITHUB_REF##*/}"
        RELEASE_DATA=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                      -H "Accept: application/vnd.github.v3+json" \
                      "https://api.github.com/repos/${{ github.repository }}/releases/tags/${RELEASE_TAG}")
        RELEASE_ID=$(echo "$RELEASE_DATA" | jq -r '.id')
        UPDATED_BODY="Download the latest version [here]($ARTIFACT_URL).\n\n$(echo "$RELEASE_DATA" | jq -r '.body')"
        curl -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
             -H "Accept: application/vnd.github.v3+json" \
             -d "{\"body\": \"$UPDATED_BODY\"}" \
             "https://api.github.com/repos/${{ github.repository }}/releases/${RELEASE_ID}"
